{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/map.js","webpack:///./src/data.js","webpack:///./src/dream.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","map","panorama","panoramaElement","document","querySelector","resetMapButton","backToMapButton","initMap","google","maps","Map","getElementById","center","lat","lng","zoom","streetViewControl","StreetViewPanorama","position","pov","heading","pitch","addEventListener","resetMap","backToMap","style","display","addMarkerOnMap","dream","marker","Marker","coordinates","icon","done","addListener","getPosition","setZoom","setCenter","setMapTypeId","data","id","imagePath","description","link","dreamsContainer","buildAllDreams","hasChildNodes","removeChild","lastChild","forEach","buildOneDream","querySelectorAll","item","event","dreamId","filter","console","log","setPosition","visitDreamOnMap","visitDream","parentElement","getAttribute","dreamElement","createElement","innerHTML","appendChild","window","init"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","let map;\r\nlet panorama;\r\nconst panoramaElement = document.querySelector('#panorama');\r\n\r\nconst resetMapButton = document.querySelector('#reset-map');\r\nconst backToMapButton = document.querySelector('#back-to-map');\r\n// On initialise la Google Map\r\nfunction initMap() {\r\n  map = new google.maps.Map(document.getElementById('map'), {\r\n    center: { lat: 48.855262, lng: 2.346055 },\r\n    zoom: 2.5,\r\n    streetViewControl: false\r\n  });\r\n\r\n  // On créer notre Google Street View\r\n  panorama = new google.maps.StreetViewPanorama(\r\n    document.getElementById('panorama'),\r\n    {\r\n      position: { lat: 48.855262, lng: 2.346055 },\r\n      pov: {\r\n        heading: 34,\r\n        pitch: 10\r\n      }\r\n    }\r\n  );\r\n\r\n  // On éxécute cette fonction pour réagir au clique sur le bouton réinitialiser la carte\r\n  addMapListeners();\r\n  // Par défaut je cache l'élément panorama\r\n  panoramaElement.style.display = 'none';\r\n  backToMapButton.style.display = 'none';\r\n}\r\n\r\n// Pour réinitialiser la map\r\nfunction addMapListeners() {\r\n  resetMapButton.addEventListener('click', resetMap);\r\n  backToMapButton.addEventListener('click', backToMap);\r\n}\r\n\r\n// Pour ajouter nos markers sur la map\r\nfunction addMarkerOnMap(dream) {\r\n  const marker = new google.maps.Marker({\r\n    position: dream.coordinates,\r\n    map: map,\r\n    icon: dream.done ? 'assets/marker-done.png' : 'assets/marker.png'\r\n  });\r\n  //On réagit au clique et on ajoute la fonction qui permet le zoom en satellite sur la position\r\n  marker.addListener('click', function() {\r\n    zoomOn(marker.getPosition());\r\n  });\r\n}\r\n// Pour définir le zoom, la position et le mode satellite au clic\r\nfunction zoomOn(position) {\r\n  map.setZoom(20);\r\n  map.setCenter(position);\r\n  map.setMapTypeId('satellite');\r\n}\r\n// La fx qui reset la map\r\nfunction resetMap() {\r\n  map.setZoom(2);\r\n  map.setCenter({ lat: 48.855262, lng: 2.346055 });\r\n  map.setMapTypeId('roadmap');\r\n}\r\n\r\nfunction backToMap() {\r\n  panoramaElement.style.display = 'none';\r\n  backToMapButton.style.display = 'none';\r\n  resetMapButton.style.display = 'block';\r\n}\r\n\r\nfunction visitDreamOnMap(position) {\r\n  panorama.setPosition(position);\r\n  panoramaElement.style.display = 'block';\r\n  backToMapButton.style.display = 'block';\r\n  resetMapButton.style.display = 'none';\r\n}\r\n\r\nexport { initMap, addMarkerOnMap, visitDreamOnMap };\r\n","const data = [\r\n  {\r\n    id: 1,\r\n    imagePath: 'assets/image_rio.jpg',\r\n    description: 'Vivre à Rio',\r\n    done: false,\r\n    link:\r\n      'https://bresil.marcovasco.fr/voyage-rio-de-janeiro.html?gclid=Cj0KCQjwj_XpBRCCARIsAItJiuRdV7I3ZG0EKzSg6aud1J5f6mLkyx9R-fBENwkDIC16dvs82cjNt3gaAk3VEALw_wcB',\r\n    coordinates: {\r\n      lat: -22.951868,\r\n      lng: -43.210114\r\n    }\r\n  },\r\n  {\r\n    id: 2,\r\n    imagePath: 'assets/image_new-york.jpg',\r\n    description: 'Visiter New-York',\r\n    done: false,\r\n    link:\r\n      'https://usa.marcovasco.fr/voyage-new-york.html?gclid=Cj0KCQjwj_XpBRCCARIsAItJiuS6RNcCJKggFX20jzgyPtozxrecvjKY1ehiKFIGApMdXtAE3DW_qBoaAu3MEALw_wcB',\r\n    coordinates: {\r\n      lat: 40.689217,\r\n      lng: -74.044547\r\n    }\r\n  },\r\n  {\r\n    id: 3,\r\n    imagePath: 'assets/image_patagonie.jpg',\r\n    description: 'Visiter la Patagonie',\r\n    done: false,\r\n    link:\r\n      'https://www.directours.com/d/les-ameriques/argentine/patagonie?gclid=Cj0KCQjwj_XpBRCCARIsAItJiuTHENOR1SSr-TMvmHAQWfEM0jdkpxeHNR5Uyh0SS7nin3fWWcG1c9AaAuTBEALw_wcB',\r\n    coordinates: {\r\n      lat: -51.011758,\r\n      lng: -73.475845\r\n    }\r\n  }\r\n];\r\n\r\nexport { data };\r\n","import { data } from './data';\r\nimport { addMarkerOnMap, visitDreamOnMap } from './map';\r\n\r\nconst dreamsContainer = document.querySelector('#dreams-container');\r\n\r\nfunction buildAllDreams() {\r\n  // On veut être sur qu'on ne fait pas de doublons donc on supprime les élèments existant avant de les reconstruire\r\n  // Ici on supprime les enfants du dreamsContainer (tant qu'il y a un dernier enfant, tu l'enlèves)\r\n  while (dreamsContainer.hasChildNodes()) {\r\n    dreamsContainer.removeChild(dreamsContainer.lastChild);\r\n  }\r\n  // Ici on construits nos rêves existant\r\n  data.forEach(buildOneDream);\r\n  // Ici on écoute les clicks sur nos dreams\r\n  addDreamsListeners();\r\n}\r\nfunction buildOneDream(dream) {\r\n  // On créer un élèment dream avec le code html qu'on veux\r\n  const dreamElement = document.createElement('div');\r\n  // On fais notre template HTML avec nos datas\r\n  dreamElement.innerHTML = ` <div class=\"card text-center\" id=${dream.id}>\r\n            <h4 class=\"card-header font-weight-bold\">\r\n              ${dream.description}\r\n            </h4>\r\n            <img\r\n              src=${dream.imagePath}\r\n              class=\"card-img-top\"\r\n              alt=\"Image de voyage\"\r\n            />\r\n            <div class=\"card-body\">\r\n              <a href=\"\" class=\"btn btn-${\r\n                dream.done ? 'secondary' : 'danger'\r\n              } btn-block font-weight-bold\">\r\n                ${dream.done ? 'Je veux le refaire' : 'Je me lance !'} \r\n              </a>\r\n            </div>\r\n            <div class=\"card-footer text-muted text-right\">\r\n              <a href=\"\" class=\"button-visit btn btn-outline-secondary btn-sm mr-1\"\r\n                >Visiter</a\r\n              ><a href=${\r\n                dream.link\r\n              } target=\"_blank\" class=\"btn btn btn-outline-dark btn-sm\">\r\n                Plus d'infos\r\n              </a>\r\n            </div>\r\n          </div>`;\r\n\r\n  // On ajoute notre template HTML en enfant du dreamsContainer\r\n  dreamsContainer.appendChild(dreamElement);\r\n\r\n  // On construit le Marker sur la map\r\n  addMarkerOnMap(dream);\r\n}\r\n\r\nfunction addDreamsListeners() {\r\n  // On obtient un NodeList avec tous les bouttons ayant la classe btn-visit donc on forEach dessus\r\n  document.querySelectorAll('.button-visit').forEach(item => {\r\n    item.addEventListener('click', event => {\r\n      // A chaque fois qu'un btn est cliqué j'extrais l'id de mon élément et j'éxévute visitDream\r\n      visitDream(item.parentElement.parentElement.getAttribute('id'));\r\n    });\r\n  });\r\n}\r\n\r\nfunction visitDream(dreamId) {\r\n  // On filtre pour trouver le dream qui à l'id passé en argument et avoir accès à sa position\r\n  let position = data.filter(item => item.id == dreamId)[0].coordinates;\r\n  console.log('DREAM ID', position);\r\n  visitDreamOnMap(position);\r\n}\r\n\r\nexport { buildAllDreams };\r\n","import { initMap } from './map';\r\nimport { buildAllDreams } from './dream';\r\n\r\nfunction init() {\r\n  initMap();\r\n  buildAllDreams();\r\n}\r\n\r\n// On attache init au scope global\r\nwindow.init = init;\r\n"],"sourceRoot":""}